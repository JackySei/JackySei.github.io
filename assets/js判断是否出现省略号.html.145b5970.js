import{_ as a,r as t,o as p,c as e,b as n,d as o,a as c,e as i}from"./app.2f80defe.js";const l={},u=c(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ellipsis box<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  Lorem ipsum dolor sit amet consectetur adipisicing elit. 
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>result<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">.ellipsis</span> <span class="token punctuation">{</span>
  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>
  <span class="token property">text-overflow</span><span class="token punctuation">:</span> ellipsis<span class="token punctuation">;</span>
  <span class="token property">white-space</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.box</span> <span class="token punctuation">{</span>
  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid gray<span class="token punctuation">;</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>
  <span class="token property">resize</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span>
  <span class="token comment">/**\u89E6\u53D1\u9891\u7387**/</span>
  <span class="token property">animation</span><span class="token punctuation">:</span> resize .1s infinite paused forwards<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.box:active</span> <span class="token punctuation">{</span>
  <span class="token property">animation-play-state</span><span class="token punctuation">:</span> running<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token atrule"><span class="token rule">@keyframes</span> resize</span> <span class="token punctuation">{</span>
  <span class="token selector">to</span> <span class="token punctuation">{</span>
    <span class="token property">opacity</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> box <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.box&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">getPadding</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> style <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">getComputedStyle</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> paddingLeft <span class="token operator">=</span> Number<span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>style<span class="token punctuation">.</span>paddingLeft<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token number">0</span>
  <span class="token keyword">const</span> paddingRight <span class="token operator">=</span> Number<span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>style<span class="token punctuation">.</span>paddingRight<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token number">0</span>
  <span class="token keyword">const</span> paddingTop <span class="token operator">=</span> Number<span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>style<span class="token punctuation">.</span>paddingTop<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token number">0</span>
  <span class="token keyword">const</span> paddingBottom <span class="token operator">=</span> Number<span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>style<span class="token punctuation">.</span>paddingBottom<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token number">0</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">pLeft</span><span class="token operator">:</span> paddingLeft<span class="token punctuation">,</span>
    <span class="token literal-property property">pRight</span><span class="token operator">:</span> paddingRight<span class="token punctuation">,</span>
    <span class="token literal-property property">pTop</span><span class="token operator">:</span> paddingTop<span class="token punctuation">,</span>
    <span class="token literal-property property">pBottom</span><span class="token operator">:</span> paddingBottom<span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
box<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;animationiteration&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> event <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CustomEvent</span><span class="token punctuation">(</span><span class="token string">&quot;resize&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  box<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token function-variable function">checkEllipsis</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> range <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createRange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  range<span class="token punctuation">.</span><span class="token function">setStart</span><span class="token punctuation">(</span>box<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
  range<span class="token punctuation">.</span><span class="token function">setEnd</span><span class="token punctuation">(</span>box<span class="token punctuation">,</span> box<span class="token punctuation">.</span>childNodes<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
  window<span class="token punctuation">.</span><span class="token function">getSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addRange</span><span class="token punctuation">(</span>range<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> rangeWidth <span class="token operator">=</span> range<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>width
  <span class="token keyword">const</span> rangeHeight <span class="token operator">=</span> range<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>height
  <span class="token keyword">const</span> <span class="token punctuation">{</span> pLeft<span class="token punctuation">,</span> pRight<span class="token punctuation">,</span> pTop<span class="token punctuation">,</span> pBottom <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">getPadding</span><span class="token punctuation">(</span>box<span class="token punctuation">)</span>
  <span class="token keyword">const</span> horizontalPadding <span class="token operator">=</span> pLeft <span class="token operator">+</span> pRight
  <span class="token keyword">const</span> verticalPadding <span class="token operator">=</span> pTop <span class="token operator">+</span> pBottom
  <span class="token keyword">if</span> <span class="token punctuation">(</span>
    rangeWidth <span class="token operator">+</span> horizontalPadding <span class="token operator">&gt;</span> box<span class="token punctuation">.</span>offsetWidth <span class="token operator">||</span>
    rangeHeight <span class="token operator">+</span> verticalPadding <span class="token operator">&gt;</span> box<span class="token punctuation">.</span>offsetHeight <span class="token operator">||</span>
    range<span class="token punctuation">.</span>scrollWidth <span class="token operator">&gt;</span> box<span class="token punctuation">.</span>offsetWidth
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    result<span class="token punctuation">.</span>textContent <span class="token operator">=</span> <span class="token string">&#39;\u8BA1\u7B97\u7ED3\u679C\uFF1A\u5B58\u5728\u7701\u7565\u53F7&#39;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    result<span class="token punctuation">.</span>textContent <span class="token operator">=</span> <span class="token string">&#39;\u8BA1\u7B97\u7ED3\u679C\uFF1A\u5BB9\u5668\u5BBD\u5EA6\u8DB3\u591F\uFF0C\u6CA1\u6709\u7701\u7565\u53F7\u4E86&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">checkEllipsis</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
box<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;resize&#39;</span><span class="token punctuation">,</span> checkEllipsis<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),r={href:"https://juejin.cn/post/7262280335978741797?searchId=202308071656348CB58AE49DAE332B35BB",target:"_blank",rel:"noopener noreferrer"},k=i("https://juejin.cn/post/7262280335978741797?searchId=202308071656348CB58AE49DAE332B35BB");function d(v,m){const s=t("ExternalLinkIcon");return p(),e("div",null,[u,n("p",null,[n("a",r,[k,o(s)])])])}var g=a(l,[["render",d],["__file","js\u5224\u65AD\u662F\u5426\u51FA\u73B0\u7701\u7565\u53F7.html.vue"]]);export{g as default};
