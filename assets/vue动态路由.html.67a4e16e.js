import{_ as n,o as s,c as a,a as t}from"./app.2f80defe.js";const p={},e=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5982\u679C\u6709\u52A8\u6001\u8DEF\u7531\u53EF\u4EE5\u53C2\u8003</span>
<span class="token comment">/* \u9996\u6B21\u6216\u8005\u5237\u65B0\u754C\u9762\uFF0Cnext(...to, replace: true)\u4F1A\u5FAA\u73AF\u904D\u5386\u8DEF\u7531
\u5982\u679Cto\u627E\u4E0D\u5230\u5BF9\u5E94\u7684\u8DEF\u7531\u4F1A\u518D\u6267\u884C\u4E00\u6B21beforeEach((to, from, next))\u76F4\u5230\u627E\u5230\u5BF9\u5E94\u8DEF\u7531 */</span>

<span class="token comment">//\u8DEF\u7531\u5B88\u536B\u4E2D\u6DFB\u52A0</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>registerRouteFresh <span class="token operator">&amp;&amp;</span> to<span class="token punctuation">.</span>path <span class="token operator">!==</span> <span class="token string">&#39;/login&#39;</span> <span class="token operator">&amp;&amp;</span> to<span class="token punctuation">.</span>path <span class="token operator">!==</span> <span class="token string">&#39;/noRight&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> Http<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/eoap/menu/list&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u83B7\u53D6\u7528\u6237\u8DEF\u7531</span>
            userRoutes <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>userRoutes <span class="token operator">&amp;&amp;</span> userRoutes<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">next</span><span class="token punctuation">(</span><span class="token string">&#39;/noRight&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          	<span class="token keyword">let</span> newRoutes <span class="token operator">=</span> <span class="token function">transformRoute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u5982\u679C\u9700\u8981\uFF0C\u6267\u884C\u8F6C\u6362\u683C\u5F0F\u65B9\u5F0F</span>
            <span class="token keyword">const</span> newRoutes <span class="token operator">=</span> <span class="token function">routerInit</span><span class="token punctuation">(</span>userRoutes<span class="token punctuation">)</span><span class="token punctuation">;</span>
            allRoutes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;index&#39;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span>
                <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/index.vue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token literal-property property">children</span><span class="token operator">:</span> newRoutes<span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            allRoutes<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                router<span class="token punctuation">.</span><span class="token function">addRoute</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">const</span> notFound <span class="token operator">=</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/:catchAll(.*)*&#39;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">redirect</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;error&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
            router<span class="token punctuation">.</span><span class="token function">addRoute</span><span class="token punctuation">(</span>notFound<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token operator">...</span>to<span class="token punctuation">,</span> <span class="token literal-property property">replace</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            registerRouteFresh <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),o=[e];function c(l,u){return s(),a("div",null,o)}var r=n(p,[["render",c],["__file","vue\u52A8\u6001\u8DEF\u7531.html.vue"]]);export{r as default};
